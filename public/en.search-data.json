{"/about/":{"data":{"":"","heading#\u0026hellip;":"‚Ä¶ ‚Ä¶"},"title":"About"},"/blog/asynchronous-up-counter.id/":{"data":{"":" Dasar dari rangkaian Up Counter Asinkron adalah T flip-flop yang dibentuk dari J-K flip-flop. Dengan memberikan kedua input J dan K nilai logika ‚Äú1‚Äù sehingga beroperasi sebagai J-K ‚ÄúToggle‚Äù.\nRangkaian pencacah maju tak sinkron memerlukan empat buah J-K flip-flop. Flip-flop pertama diberi sinyal clock, sedangkan outputnya (Q) menjadi clock untuk flip-flop kedua. Selanjutnya output flip-flop kedua menjadi clock untuk flip-flop ketiga, begitu juga seterusnya untuk flip-flop keempat. Pada flip-flop ke empat output Q di tanahkan (grounded).\nBerikut rangkaian Up Counter dengan menggunakan proteus (file project dapat didownload disini):\nGambar simulasi Up Counter dengan Flip-Flop J-K Jika anda ingin mencoba melakukan percobaan Up Counter dengan Flip Flop J-K ini, maka langkah yang perlu dilakukan adalah:\nSet Clock ke nilai 0 (Low) Set Q0, Q1, Q3, dan Q3 ke nilai 0 (Sakelar yang menghubungkan ground dan R atau Clear, dalam kondisi tertutup. Kemudian, membukanya kembali). Set Clock ke nilai 0 dan 1 bergantian dengan memutus/menghubungkan saklar pertama (atas). Catatan: LED paling kiri merupakan LSB (Least Significant Bit) sedangkan yang kanan MSB (Most Significant Bit), sehingga terbalik dengan angka biner normal (seharusnya LSB dikanan). Versi Video "},"title":"Pencacah Maju Asinkron (Asynchronous Up Counter) dengan Clocked J-K Flip-Flop: Simulasi dengan Proteus"},"/blog/hacking-on-xmonad/":{"data":{"":" ABOUT This is the xmonad window manager configuration of firman-qs.\nMy Github: http://www.github.com/firmn-qs/ Originally, this was my old archlinux DTOS configuration, but now i am on fedora. I have tested on my fedora and it works fine. For other distributions it should be the same, just complete the necessary packages. I'll try to give a little guidance.\nNote Before you go and copy my config, read the section below for the dependencies and short tutorial to get started. if I didn't miss anything, this should be enough to get your linux to use my xmonad configuration.\nCredit: https://xmonad.org, https://gitlab.com/dtos\nYou can see my doom emacs configuration here:\nconfig.org init.el package.el Documentation https://xmonad.org/documentation.html What I will tell you next, all come from the documentation. Documentation is the most important thing when you learn something, whether it's a window manager, programming language, etc. Here are some links to the xmonad documentation:\nhttps://xmonad.org/documentation.html Documentation home page. https://xmonad.org/INSTALL.html On how to install xmonad. Hackage Documentation, It contains further documentation, like what libraries you can use, how to use them, more like how to use haskell for xmonad.\nhttps://hackage.haskell.org/package/xmonad https://hackage.haskell.org/package/xmonad-contrib Getting Started with xmonad and this Config Dependencies Installing xmonad In general, the process is the same, the difference is which method you use. Either use your distro's package manager, or build from source with cabal or stack. This time I will use the package manager, because I find it easier and use less space. Of course if you want to play with haskell more deeply, using stack or cabal is great.\nInstalling dependencies The dependencies are the same, but the names may differ in different package managers. I will give an example for Fedora, for other distros, you can open the install xmonad documentation link that I provided before. Run in terminal\nsudo dnf update \u0026\u0026 sudo dnf install git libX11-devel libXft-devel libXinerama-devel libXrandr-devel libXScrnSaver-devel Make xmonad config directory This is where you store all configurations. The new xmonad saves its configuration in ~/.config/xmonad, while the older version is in ~/.xmonad. In my case, the fedora package manager provided xmonad which seemed to be older, so I saved the configuration in ~/.xmonad. If you are using a distro like arch linux you will probably use ~/.config/xmonad instead. Just test which one works later. To make configuration directory:\n# for latest version: mkdir ~/.config/xmonad # or for older version: mkdir ~/.xmonad Installing xmonad Three things you need to install, xmonad itself, xmonad-contrib (Community-maintained tiling algorithms and extension modules for xmonad), and the bar (unless you don't want bar üòÅ). The bar that is commonly used in conjunction with xmonad is xmobar and distrotube has a great tutorial on this. The other bar, which I'll be using in this configuration is polybar, so we'll be installing that as well. On fedora:\nsudo dnf install xmonad ghc-xmonad-contrib polybar Remember, the package name may be different in each package manager that your distro uses. Use package search to help you, for example, on arch linux you can use pacman -Ss pkg-name-you-are-looking-for, or on ubuntu: ~apt search pkg-name-you-are-looking-for. if i remember correctly, on arch linux the names are xmonad, xmonad-contrib (without ghc-), and polybar. So on an arch based distro you can do:\nsudo pacman -S xmonad xmonad-contrib polybar Another thing to install Dmenu Xmonad uses dmenu by default, you can copy my patched dmenu (see my dmenu build) and install it or install the plain version (https://tools.suckless.org/dmenu) and patch it yourself. Of course you can use rofi or another launcher, just set it in keybinding later.\nDbus To easily display XMonad status in polybar we need DBus monitoring and i use xintron/xmonad-log for that. Xmonad-log allows us to send status over DBus using XMonad's DynamicLog to any application that support executing custom scripts such as polybar.\nFirst we need to install dbus. Again, i'm using fedora here: sudo dnf install ghc-dbus ghc-dbus-devel Next, we need to install golang to build xmonad-log:\nsudo dnf install golang Then we clone the xmonad-log repository. On its github it says we need to clone it to $GOPATH/src/github.com/xintron/xmonad-log. $GOPATH is a variable used by Go to reference the location where all project folders are stored. However, Setup Go project using $GOPATH is not recommended for the latest version of Go, instead we use Go Modules. So just clone to our home directory, or any other directory you want.\n# clone to home directory git clone https://github.com/xintron/xmonad-log.git ~/xmonad-log # or clone to another directory git clone https://github.com/xintron/xmonad-log.git ~/path/to/another/dir/xmonad-log Now go to xmonad-log directory which we have clone, by ordering:\ncd xmonad-log Once we're on xmonad-log directory, then we initilize new Go project by:\ngo mod init xmonad-log Then add dependencies to current module and install them, by:\ngo get xmonad-log Now we build it\ngo build This will give you an xmonad-log binary in the directory. Move this to an appropriate directory in your $PATH.\nIMPORTS These are Haskell modules that we must import so that we can use their functions later in the config. We use import stetement for to import modules. Qualified import makes the imported module only available in qualified form, eg. it force an obligatory namespace qualifier to imported identifiers. A qualified import allows us to use functions with the same name from several modules. Because there is a namespace, haskell doesn't get agitated.\n-- Base import XMonad import System.Directory import System.IO (hClose, hPutStr, hPutStrLn) import System.Exit (exitSuccess) import qualified XMonad.StackSet as W -- Actions import XMonad.Actions.CopyWindow (kill1) import XMonad.Actions.CycleWS (Direction1D(..), moveTo, shiftTo, toggleWS, WSType(..), nextScreen, prevScreen) import XMonad.Actions.MouseResize import XMonad.Actions.Promote import XMonad.Actions.RotSlaves (rotSlavesDown, rotAllDown) import XMonad.Actions.WindowGo (runOrRaise) import XMonad.Actions.WithAll (sinkAll, killAll) import qualified XMonad.Actions.Search as S -- Data import Data.Char (isSpace, toUpper) import Data.Maybe (fromJust, isJust) import Data.Monoid import Data.Tree import qualified Data.Map as M -- Dbus import qualified DBus as D import qualified DBus.Client as D import qualified Codec.Binary.UTF8.String as UTF8 -- Hooks import XMonad.Hooks.DynamicLog import XMonad.Hooks.EwmhDesktops import XMonad.Hooks.ManageDocks (avoidStruts, docks, manageDocks, ToggleStruts(..)) import XMonad.Hooks.ManageHelpers (isFullscreen, doFullFloat, doCenterFloat) import XMonad.Hooks.ServerMode import XMonad.Hooks.SetWMName import XMonad.Hooks.StatusBar import XMonad.Hooks.StatusBar.PP import XMonad.Hooks.WindowSwallowing import XMonad.Hooks.WorkspaceHistory -- Layouts import XMonad.Layout.Accordion import XMonad.Layout.GridVariants (Grid(Grid)) import XMonad.Layout.SimplestFloat import XMonad.Layout.Spiral import XMonad.Layout.ResizableTile import XMonad.Layout.Tabbed import XMonad.Layout.ThreeColumns -- Layouts modifiers import XMonad.Layout.LayoutModifier import XMonad.Layout.LimitWindows (limitWindows, increaseLimit, decreaseLimit) import XMonad.Layout.MultiToggle (mkToggle, single, EOT(EOT), (??)) import XMonad.Layout.MultiToggle.Instances (StdTransformers(NBFULL, MIRROR, NOBORDERS)) import XMonad.Layout.NoBorders import XMonad.Layout.Renamed import XMonad.Layout.ShowWName import XMonad.Layout.Simplest import XMonad.Layout.Spacing import XMonad.Layout.SubLayouts import XMonad.Layout.WindowArranger (windowArrange, WindowArrangerMsg(..)) import XMonad.Layout.WindowNavigation import qualified XMonad.Layout.ToggleLayouts as T (toggleLayouts, ToggleLayout(Toggle)) import qualified XMonad.Layout.MultiToggle as MT (Toggle(..)) -- Utilities import XMonad.Util.Dmenu import XMonad.Util.EZConfig (additionalKeysP, mkNamedKeymap) import XMonad.Util.Hacks (windowedFullscreenFixEventHook, javaHack, trayerAboveXmobarEventHook, trayAbovePanelEventHook, trayerPaddingXmobarEventHook, trayPaddingXmobarEventHook, trayPaddingEventHook) import XMonad.Util.NamedActions import XMonad.Util.NamedScratchpad import XMonad.Util.NamedWindows (getName) import XMonad.Util.Run (runProcessWithInput, safeSpawn, spawnPipe) import XMonad.Util.SpawnOnce -- Colorscheme Module, made using pywal template, and link it to ~/.xmonaad/lib/Colors directory using ln -s import Colors.XmonadPywal VARIABLES It's nice to assign values to stuff that you will use more than once in the config. Setting values for things like font, terminal and editor means you only have to change the value here to make changes globally.\n-- Variables myFont :: String myFont = \"xft:JetBrainsMono Nerd Font:regular:size=9:antialias=true:hinting=true\" myModMask :: KeyMask myModMask = mod4Mask -- Sets modkey to super/windows key myTerminal :: String myTerminal = \"alacritty\" -- Sets default terminal myBrowser :: String myBrowser = \"firefox \" -- Sets qutebrowser as browser myEmacs :: String myEmacs = \"emacsclient -c -a 'emacs' \" -- Makes emacs keybindings easier to type myEditor :: String myEditor = \"code\" -- Sets emacs as editor myFileManager :: String myFileManager = \"nemo\" -- Sets emacs as editor myBorderWidth :: Dimension myBorderWidth = 2 -- Sets border width for windows myNormColor :: String -- Border color of normal windows myNormColor = background -- This variable is imported from Colors.THEME myFocusColor :: String -- Border color of focused windows myFocusColor = color4 -- This variable is imported from Colors.THEME mySoundPlayer :: String mySoundPlayer = \"ffplay -nodisp -autoexit \" -- The program that will play system sounds -- just like his name, to count window windowCount :: X (Maybe String) windowCount = gets $ Just . show . length . W.integrate' . W.stack . W.workspace . W.current . windowset AUTOSTARTS This is a program that automatically runs on startup or restarting xmonad. We need to store it in startupHook on main method (this similar to main in other languages, such as c). For now we store it in myStartupHook first then put it later on startupHook.\nmyStartupHook :: X () myStartupHook = do spawnOnce (mySoundPlayer ++ startupSound) spawnOnce \"picom\" spawnOnce \"nm-applet\" spawnOnce \"pasystray\" spawnOnce \"xset dpms 0 0 10800 \u0026 xss-lock -- slock \u0026\" spawn \"/usr/bin/emacs --daemon\" -- emacs daemon for the emacsclient spawn \"polybar mainbar-xmonad\" spawnOnce \"wal -R \u0026\" setWMName \"LG3D\" SCRATCHPADS Allows to have several floating scratchpads running different applications. Import Util.NamedScratchpad and bind a key to namedScratchpadSpawnAction. In the example below, I have created named scratchpads for:\nalacritty ‚Äì my terminal mocp ‚Äì a terminal music player qalculate-gtk ‚Äì a nice calculator myScratchPads :: [NamedScratchpad] myScratchPads = [ NS \"terminal\" spawnTerm findTerm manageTerm , NS \"mocp\" spawnMocp findMocp manageMocp , NS \"calculator\" spawnCalc findCalc manageCalc ] where spawnTerm = myTerminal ++ \" -t scratchpad\" findTerm = title =? \"scratchpad\" manageTerm = customFloating $ W.RationalRect l t w h where h = 0.9 w = 0.9 t = 0.95 -h l = 0.95 -w spawnMocp = myTerminal ++ \" -t mocp -e mocp\" findMocp = title =? \"mocp\" manageMocp = customFloating $ W.RationalRect l t w h where h = 0.9 w = 0.9 t = 0.95 -h l = 0.95 -w spawnCalc = \"qalculate-gtk\" findCalc = className =? \"Qalculate-gtk\" manageCalc = customFloating $ W.RationalRect l t w h where h = 0.5 w = 0.4 t = 0.75 -h l = 0.70 -w LAYOUTS Defining the layouts that I want to have available. This require us to import modules XMonad.Layout.\n{- | Makes setting the spacingRaw simpler to write. The spacingRaw module adds a configurable amount of space around windows. -} mySpacing :: Integer -\u003e l a -\u003e XMonad.Layout.LayoutModifier.ModifiedLayout Spacing l a mySpacing i = spacingRaw False (Border i i i i) True (Border i i i i) True {- | Below is a variation of the above except no borders are applied if fewer than two windows. So a single window has no gaps. -} mySpacing' :: Integer -\u003e l a -\u003e XMonad.Layout.LayoutModifier.ModifiedLayout Spacing l a mySpacing' i = spacingRaw True (Border i i i i) True (Border i i i i) True {- Defining a bunch of layouts, many that I don't use. limitWindows n sets maximum number of windows displayed for layout. mySpacing n sets the gap size around the windows. -} tall = renamed [Replace \"tall\"] $ limitWindows 5 $ addTabs shrinkText myTabTheme $ subLayout [] (smartBorders Simplest) $ mySpacing 4 $ ResizableTall 1 (3/100) (1/2) [] monocle = renamed [Replace \"monocle\"] $ addTabs shrinkText myTabTheme $ subLayout [] (smartBorders Simplest) Full floats = renamed [Replace \"floats\"] simplestFloat grid = renamed [Replace \"grid\"] $ limitWindows 9 $ addTabs shrinkText myTabTheme $ subLayout [] (smartBorders Simplest) $ mySpacing 4 $ mkToggle (single MIRROR) $ Grid (16/10) spirals = renamed [Replace \"spirals\"] $ limitWindows 9 $ addTabs shrinkText myTabTheme $ subLayout [] (smartBorders Simplest) $ mySpacing' 4 $ spiral (6/7) threeCol = renamed [Replace \"threeCol\"] $ limitWindows 7 $ addTabs shrinkText myTabTheme $ subLayout [] (smartBorders Simplest) $ ThreeCol 1 (3/100) (1/2) {- | Mirror takes a layout and rotates it by 90 degrees. So we are applying Mirror to the ThreeCol layout. -} threeRow = renamed [Replace \"threeRow\"] $ limitWindows 7 $ addTabs shrinkText myTabTheme $ subLayout [] (smartBorders Simplest) $ Mirror $ ThreeCol 1 (3/100) (1/2) {- | I cannot add spacing to this layout because it will add spacing between window and tabs which looks bad. -} tabs = renamed [Replace \"tabs\"] $ tabbed shrinkText myTabTheme tallAccordion = renamed [Replace \"tallAccordion\"] Accordion wideAccordion = renamed [Replace \"wideAccordion\"] $ Mirror Accordion -- setting colors for tabs layout and tabs sublayout. myTabTheme = def { fontName = myFont , activeColor = color15 , inactiveColor = color8 , activeBorderColor = color15 , inactiveBorderColor = background , activeTextColor = background , inactiveTextColor = color0 } -- The layout hook myLayoutHook = avoidStruts $ mouseResize $ windowArrange $ T.toggleLayouts floats $ mkToggle (NBFULL ?? NOBORDERS ?? EOT) myDefaultLayout where myDefaultLayout = smartBorders $ withBorder myBorderWidth $ configurableNavigation noNavigateBorders tall ||| noBorders monocle ||| floats ||| noBorders tabs ||| grid ||| spirals ||| threeCol ||| threeRow ||| tallAccordion ||| wideAccordion WORKSPACES Thisi worspace configuration contains workspace name, how make custom xmonad polybar-module clickable, and theme for workspace name on change popup.\n-- Workspace name myWorkspaces :: [String] myWorkspaces = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"] {- | another worspace name that you can use: myWorkspaces = [ \"dev\" , \"www\" , \"sys\" , \"doc\" , \"vbx\" , \"cht\" , \"mus\" , \"vid\" , \"trm\" , \"gfx\" ] -} -- Make custom xmonad polybar module clickable myWorkspaceIndices = M.fromList $ zipWith (,) myWorkspaces [1..] {- | Basically we use xdotool (don't forget to install it) to press our keybinding, when we do click to polybar xmonad workspace. -} clickable ws = \"%{A:xdotool key super+\" ++ show i ++ \" \u0026:}\" ++ ws ++ \"%{A}\" where i = fromJust $ M.lookup ws myWorkspaceIndices {- | Theme for showWName which prints current workspace when you change workspaces. In order to make it work, on main method you need to have: , layoutHook = showWName' myShowWNameTheme $ myLayoutHook instead of just: , layoutHook = myLayoutHook -} myShowWNameTheme :: SWNConfig myShowWNameTheme = def { swn_font = \"xft:JetBrainsMono Nerd Font:bold:size=50\" , swn_fade = 1.0 , swn_bgcolor = \"#1c1f24\" , swn_color = \"#ffffff\" } MANAGEHOOK Sets some rules for certain programs. Examples include forcing certain programs to always float, or to always appear on a certain workspace. Forcing programs to a certain workspace with a doShift requires xdotool if you are using clickable workspaces. You need the className or title of the program. Use xprop to get this info.\n{- | 'doFloat' forces a window to float. Useful for dialog boxes and such. using 'doShift ( myWorkspaces !! 7)' sends program to workspace 8! I'm doing it this way because otherwise I would have to write out the full name of my workspaces and the names would be very long if using clickable workspaces. -} myManageHook :: XMonad.Query (Data.Monoid.Endo WindowSet) myManageHook = composeAll [ className =? \"confirm\" --\u003e doFloat , className =? \"file_progress\" --\u003e doFloat , className =? \"dialog\" --\u003e doFloat , className =? \"download\" --\u003e doFloat , className =? \"error\" --\u003e doFloat , className =? \"Gimp\" --\u003e doFloat , className =? \"notification\" --\u003e doFloat , className =? \"pinentry-gtk-2\" --\u003e doFloat , className =? \"splash\" --\u003e doFloat , className =? \"toolbar\" --\u003e doFloat , className =? \"Yad\" --\u003e doCenterFloat , title =? \"Oracle VM VirtualBox Manager\" --\u003e doFloat , title =? \"Order Chain - Market Snapshots\" --\u003e doFloat , title =? \"Mozilla Firefox\" --\u003e doShift ( myWorkspaces !! 1 ) , className =? \"Brave-browser\" --\u003e doShift ( myWorkspaces !! 1 ) , className =? \"mpv\" --\u003e doShift ( myWorkspaces !! 7 ) , className =? \"Gimp\" --\u003e doShift ( myWorkspaces !! 8 ) , className =? \"VirtualBox Manager\" --\u003e doShift ( myWorkspaces !! 4 ) , (className =? \"firefox\" \u003c\u0026\u0026\u003e resource =? \"Dialog\") --\u003e doFloat , isFullscreen --\u003e doFullFloat ] \u003c+\u003e namedScratchpadManageHook myScratchPads SYSTEM SOUNDS Available sounds that are part of the default dtos-sounds package include:\nmenu-01.mp3 menu-02.mp3 menu-03.mp3 shutdown-01.mp3 shutdown-02.mp3 shutdown-03.mp3 startup-01.mp3 startup-02.mp3 startup-03.mp3 soundDir = \"/home/fqs/.config/dtos-sounds/\" startupSound = soundDir ++ \"startup-01.mp3\" shutdownSound = soundDir ++ \"shutdown-01.mp3\" NAMED ACTIONS NamedActions is a wrapper for keybinding configuration that can list the available keybindings. The following custom functions are used to add NamedActions to our keybindings in the format that I desired. subTitle' allows me to format the subtitle (subKeys) so that I can prepend and/or append text to them. showKeybindings is a function that pipes the output of our NamedActions into a GUI display program, such as 'yad' or 'zenity'.\nsubtitle' :: String -\u003e ((KeyMask, KeySym), NamedAction) subtitle' x = ( (0,0) , NamedAction $ map toUpper $ sep ++ \"\\n-- \" ++ x ++ \" --\\n\" ++ sep ) where sep = replicate (6 + length x) '-' showKeybindings :: [((KeyMask, KeySym), NamedAction)] -\u003e NamedAction showKeybindings x = addName \"Show Keybindings\" $ io $ do h \u003c- spawnPipe \"yad --text-info --fontname=\\\"JetBrainsMono Nerd Font 11\\\" --fore=#46d9ff back=#282c36 --center --geometry=1200x700 --title \\\"XMonad keybindings\\\"\" --hPutStr h (unlines $ showKm x) -- showKM adds \"\u003e\u003e\" before subtitles hPutStr h (unlines $ showKmSimple x) -- showKmSimple doesn't add \"\u003e\u003e\" to subtitles hClose h return () KEYBINDINGS This config use the Xmonad.Util.EZConfig module, that make keybindings to be written in simpler form. The Super/Windows key is 'M' (the modkey), the ALT key is 'M1'. Shift is 'S' and CTRL is 'C'. If you dont know what is the name of key actually is, always refer to EZConfig documentation (for example, the backspace key is written as \u003cBackspace\u003e, note it is enclosed in \u003c‚Ä¶\u003e and the initial letter is capitalized). Each group of keybindings must have a subKeys heading, and each individual keybinding must use addName to add a description. These headings and descriptions are needed for the keybindings list that can be launched with 'M-F1'.\nNote will complete the table later, the key should be self-explanatory. I will give you small example: \"M-C-r\" means you need to press Modkey+Ctrl+r \"M-x r\" means you need to press Modkey+x, release it, then press r\nA FEW KEYBINDINGS ASSOCIATED ACTION MODKEY + RETURN opens terminal myKeys :: XConfig l0 -\u003e [((KeyMask, KeySym), NamedAction)] myKeys c = --(subtitle \"Custom Keys\":) $ mkNamedKeymap c $ let subKeys str ks = subtitle' str : mkNamedKeymap c ks in subKeys \"Xmonad Essentials\" [ (\"M-C-r\", addName \"Recompile XMonad\" $ spawn \"xmonad --recompile\") , (\"M-S-\u003cF5\u003e\", addName \"Restart XMonad\" $ spawn \"killall emacs; killall polybar; xmonad --restart\") , (\"M-S-q\", addName \"Quit XMonad\" $ sequence_ [spawn (mySoundPlayer ++ shutdownSound), io exitSuccess]) , (\"M-x\", addName \"Quit XMonad\" $ spawn \"dm-logout\") , (\"M-q\", addName \"Kill focused window\" $ kill1) , (\"M-S-q\", addName \"Kill all windows on WS\"$ killAll) , (\"M-d\", addName \"Run prompt\" $ spawn \"dm_run\") , (\"M-S-b\", addName \"Toggle bar show/hide\" $ sendMessage ToggleStruts) ] ^++^ subKeys \"Switch to workspace\" [ (\"M-1\", addName \"Switch to workspace 1\" $ windows $ W.greedyView $ myWorkspaces !! 0) , (\"M-2\", addName \"Switch to workspace 2\" $ windows $ W.greedyView $ myWorkspaces !! 1) , (\"M-3\", addName \"Switch to workspace 3\" $ windows $ W.greedyView $ myWorkspaces !! 2) , (\"M-4\", addName \"Switch to workspace 4\" $ windows $ W.greedyView $ myWorkspaces !! 3) , (\"M-5\", addName \"Switch to workspace 5\" $ windows $ W.greedyView $ myWorkspaces !! 4) , (\"M-6\", addName \"Switch to workspace 6\" $ windows $ W.greedyView $ myWorkspaces !! 5) , (\"M-7\", addName \"Switch to workspace 7\" $ windows $ W.greedyView $ myWorkspaces !! 6) , (\"M-8\", addName \"Switch to workspace 8\" $ windows $ W.greedyView $ myWorkspaces !! 7) , (\"M-9\", addName \"Switch to workspace 9\" $ windows $ W.greedyView $ myWorkspaces !! 8) , (\"M-0\", addName \"Switch to workspace 10\" $ windows $ W.greedyView $ myWorkspaces !! 9) ] ^++^ subKeys \"Send window to workspace\" [ (\"M-S-1\", addName \"Send to workspace 1\" $ windows $ W.shift $ myWorkspaces !! 0) , (\"M-S-2\", addName \"Send to workspace 2\" $ windows $ W.shift $ myWorkspaces !! 1) , (\"M-S-3\", addName \"Send to workspace 3\" $ windows $ W.shift $ myWorkspaces !! 2) , (\"M-S-4\", addName \"Send to workspace 4\" $ windows $ W.shift $ myWorkspaces !! 3) , (\"M-S-5\", addName \"Send to workspace 5\" $ windows $ W.shift $ myWorkspaces !! 4) , (\"M-S-6\", addName \"Send to workspace 6\" $ windows $ W.shift $ myWorkspaces !! 5) , (\"M-S-7\", addName \"Send to workspace 7\" $ windows $ W.shift $ myWorkspaces !! 6) , (\"M-S-8\", addName \"Send to workspace 8\" $ windows $ W.shift $ myWorkspaces !! 7) , (\"M-S-9\", addName \"Send to workspace 9\" $ windows $ W.shift $ myWorkspaces !! 8) , (\"M-S-0\", addName \"Send to workspace 10\" $ windows $ W.shift $ myWorkspaces !! 9) ] ^++^ subKeys \"Move window to WS and go there\" [ (\"M-S-\u003cPage_Up\u003e\", addName \"Move window to next WS\" $ shiftTo Next nonNSP \u003e\u003e moveTo Next nonNSP) , (\"M-S-\u003cPage_Down\u003e\", addName \"Move window to prev WS\" $ shiftTo Prev nonNSP \u003e\u003e moveTo Prev nonNSP) ] ^++^ subKeys \"Window navigation\" [ (\"M-j\", addName \"Move focus to next window\" $ windows W.focusDown) , (\"M-k\", addName \"Move focus to prev window\" $ windows W.focusUp) , (\"M-m\", addName \"Move focus to master window\" $ windows W.focusMaster) , (\"M-S-j\", addName \"Swap focused window with next window\" $ windows W.swapDown) , (\"M-S-k\", addName \"Swap focused window with prev window\" $ windows W.swapUp) , (\"M-S-m\", addName \"Swap focused window with master window\"$ windows W.swapMaster) , (\"M-\u003cBackspace\u003e\", addName \"Move focused window to master\" $ promote) , (\"M-S-,\", addName \"Rotate all windows except master\" $ rotSlavesDown) , (\"M-S-.\", addName \"Rotate all windows current stack\" $ rotAllDown) ] {- | Dmenu scripts (dmscripts) In Xmonad and many tiling window managers, M-p is the default keybinding to launch dmenu_run, so I've decided to use M-p plus KEY for these dmenu scripts. -} ^++^ subKeys \"Dmenu scripts\" [ (\"M-p h\", addName \"List all dmscripts\" $ spawn \"dm-hub\") , (\"M-p b\", addName \"Set background\" $ spawn \"dm-setbg\") , (\"M-p c\", addName \"Edit config files\" $ spawn \"dm-confedit\") , (\"M-p m\", addName \"View manpages\" $ spawn \"dm-man\") , (\"M-p o\", addName \"Store and copy notes\" $ spawn \"dm-note\") , (\"M-p x\", addName \"Logout Menu\" $ spawn \"dm-logout\") , (\"M-p r\", addName \"Listen to online radio\"$ spawn \"dm-radio\") , (\"M-p s\", addName \"Record Screen\" $ spawn \"dm-record\") , (\"M-p w\", addName \"Search various engines\"$ spawn \"dm-websearch\") , (\"M-p n\", addName \"Connect Wifi\" $ spawn \"dm-wifi\") ] ^++^ subKeys \"Favorite programs\" [ (\"M-\u003cReturn\u003e\", addName \"Launch terminal\" $ spawn myTerminal) , (\"M-b\", addName \"Launch web browser\" $ spawn myBrowser) , (\"M-e\", addName \"Launch file manager\" $ spawn myFileManager) , (\"M-s\", addName \"Launch file manager\" $ spawn \"flameshot gui\") , (\"M-M1-h\", addName \"Launch htop\" $ spawn (myTerminal ++ \" -e htop\")) ] ^++^ subKeys \"Monitors\" [ (\"M-.\", addName \"Switch focus to next monitor\" $ nextScreen) , (\"M-,\", addName \"Switch focus to prev monitor\" $ prevScreen) ] -- Switch layouts ^++^ subKeys \"Switch layouts\" [ (\"M-\u003cTab\u003e\", addName \"Switch to next layout\" $ sendMessage NextLayout) , (\"M-f\", addName \"Toggle noborders/full\" $ sendMessage (MT.Toggle NBFULL) \u003e\u003e sendMessage ToggleStruts) ] -- Window resizing ^++^ subKeys \"Window resizing\" [ (\"M-h\", addName \"Shrink window\" $ sendMessage Shrink) , (\"M-l\", addName \"Expand window\" $ sendMessage Expand) , (\"M-M1-j\", addName \"Shrink window vertically\" $ sendMessage MirrorShrink) , (\"M-M1-k\", addName \"Expand window vertically\" $ sendMessage MirrorExpand) ] -- Floating windows ^++^ subKeys \"Floating windows\" [ (\"M-S-\u003cSpace\u003e\", addName \"Toggle float layout\" $ sendMessage (T.Toggle \"floats\")) , (\"M-t\", addName \"Sink a floating window\" $ withFocused $ windows . W.sink) , (\"M-S-t\", addName \"Sink all floated windows\" $ sinkAll) ] -- Increase/decrease spacing (gaps) ^++^ subKeys \"Window spacing (gaps)\" [ (\"M-g j\", addName \"Decrease window spacing\" $ decWindowSpacing 4) , (\"M-g k\", addName \"Increase window spacing\" $ incWindowSpacing 4) , (\"M-g h\", addName \"Decrease screen spacing\" $ decScreenSpacing 4) , (\"M-g l\", addName \"Increase screen spacing\" $ incScreenSpacing 4) ] -- Increase/decrease windows in the master pane or the stack ^++^ subKeys \"Increase/decrease windows in master pane or the stack\" [ (\"M-S-\u003cUp\u003e\", addName \"Increase clients in master pane\" $ sendMessage (IncMasterN 1)) , (\"M-S-\u003cDown\u003e\", addName \"Decrease clients in master pane\" $ sendMessage (IncMasterN (-1))) , (\"M-=\", addName \"Increase max # of windows for layout\" $ increaseLimit) , (\"M--\", addName \"Decrease max # of windows for layout\" $ decreaseLimit) ] {- | Sublayouts This is used to push windows to tabbed sublayouts, or pull them out of it. -} ^++^ subKeys \"Sublayouts\" [ (\"M-C-h\", addName \"pullGroup L\" $ sendMessage $ pullGroup L) , (\"M-C-l\", addName \"pullGroup R\" $ sendMessage $ pullGroup R) , (\"M-C-k\", addName \"pullGroup U\" $ sendMessage $ pullGroup U) , (\"M-C-j\", addName \"pullGroup D\" $ sendMessage $ pullGroup D) , (\"M-C-m\", addName \"MergeAll\" $ withFocused (sendMessage . MergeAll)) , (\"M-C-u\", addName \"UnMerge\" $ withFocused (sendMessage . UnMerge)) , (\"M-C-/\", addName \"UnMergeAll\" $ withFocused (sendMessage . UnMergeAll)) , (\"M-C-.\", addName \"Switch focus next tab\" $ onGroup W.focusUp') , (\"M-C-,\", addName \"Switch focus prev tab\" $ onGroup W.focusDown') ] {- | Scratchpads Toggle show/hide these programs. They run on a hidden workspace. When you toggle them to show, it brings them to current workspace. Toggle them to hide and it sends them back to hidden workspace (NSP). -} ^++^ subKeys \"Scratchpads\" [ (\"M-` 1\", addName \"Toggle scratchpad terminal\" $ namedScratchpadAction myScratchPads \"terminal\") , (\"M-` 2\", addName \"Toggle scratchpad mocp\" $ namedScratchpadAction myScratchPads \"mocp\") , (\"M-` 3\", addName \"Toggle scratchpad calculator\" $ namedScratchpadAction myScratchPads \"calculator\") ] -- Controls for mocp music player (SUPER-u followed by a key) ^++^ subKeys \"Mocp music player\" [ (\"M-u p\", addName \"mocp play\" $ spawn \"mocp --play\") , (\"M-u l\", addName \"mocp next\" $ spawn \"mocp --next\") , (\"M-u h\", addName \"mocp prev\" $ spawn \"mocp --previous\") , (\"M-u \u003cSpace\u003e\", addName \"mocp toggle pause\" $ spawn \"mocp --toggle-pause\") ] -- Emacs (SUPER-e followed by a key) ^++^ subKeys \"Code Editor\" [ (\"M-c c\", addName \"VS Code\" $ spawn myEditor) , (\"M-c e\", addName \"Emacsclient\" $ spawn myEmacs) , (\"M-c a\", addName \"Emacsclient EMMS (music)\" $ spawn (myEmacs ++ \"--eval '(emms)' --eval '(emms-play-directory-tree \\\"~/Music/\\\")'\")) , (\"M-c b\", addName \"Emacsclient Ibuffer\" $ spawn (myEmacs ++ \"--eval '(ibuffer)'\")) , (\"M-c d\", addName \"Emacsclient Dired\" $ spawn (myEmacs ++ \"--eval '(dired nil)'\")) , (\"M-c m\", addName \"Mousepad\" $ spawn \"mousepad\") ] -- Multimedia Keys ^++^ subKeys \"Multimedia keys\" [ (\"\u003cXF86AudioMute\u003e\", addName \"Toggle audio mute\" $ spawn \"volumecontrol.sh -o m\") , (\"\u003cXF86AudioLowerVolume\u003e\", addName \"Lower volume\" $ spawn \"volumecontrol.sh -o d\") , (\"\u003cXF86AudioRaiseVolume\u003e\", addName \"Raise volume\" $ spawn \"volumecontrol.sh -o i\") , (\"\u003cXF86MonBrightnessDown\u003e\", addName \"Raise vol\" $ spawn \"brightnesscontrol.sh d\") , (\"\u003cXF86MonBrightnessUp\u003e\", addName \"Raise vol\" $ spawn \"brightnesscontrol.sh i\") , (\"\u003cPrint\u003e\", addName \"Take screenshot\" $ spawn \"flameshotgui\") ] -- Workspace ^++^ subKeys \"Workspace\" [ (\"M1-\u003cTab\u003e\", addName \"Cycle with last WS\" $ toggleWS) ] -- The following lines are needed for named scratchpads. where nonNSP = WSIs (return (\\ws -\u003e W.tag ws /= \"NSP\")) nonEmptyNonNSP = WSIs (return (\\ws -\u003e isJust (W.stack ws) \u0026\u0026 W.tag ws /= \"NSP\")) MAKE XMONAD AND POLYBAR TALK TO EACH OTHER As i have explained before, we need to integrate xmonad to visualize the current window title and workspaces in polybar. To make xmonad and polybar talk we only need to add [module/xmonad] in our polybar config and polybar ready to talk. Now, for xmonad to talk, we need to configure it to send log events information via dbus using XMonad's DynamicLog with the help of xmonad-log. The pretty printing (PP) options, allows us to customize the formatting of status information.\nbg1 = \"#3c3836\" bg2 = \"#504945\" red = \"#fb4934\" myLogHook :: D.Client -\u003e PP myLogHook dbus = def { ppOutput = dbusOutput dbus , ppWsSep = \"\" , ppSep = \" | \" , ppLayout = wrap \"%{A1:xdotool key super+Tab \u0026:}\" \"%{A}\" , ppTitle = shorten 50 , ppExtras = [windowCount] , ppOrder = \\(_:l:t:ex) -\u003e [l]++ex++[t] } -- Emit a DBus signal on log updates dbusOutput :: D.Client -\u003e String -\u003e IO () dbusOutput dbus str = do let signal = (D.signal objectPath interfaceName memberName) { D.signalBody = [D.toVariant $ UTF8.decodeString str] } D.emit dbus signal where objectPath = D.objectPath_ \"/org/xmonad/Log\" interfaceName = D.interfaceName_ \"org.xmonad.Log\" memberName = D.memberName_ \"Update\" THE MAIN This is the \"main\" of XMonad. This where everything in our configs comes together and works.\nmain :: IO () main = do dbus \u003c- D.connectSession -- Request access to the DBus name D.requestName dbus (D.busName_ \"org.xmonad.Log\") [D.nameAllowReplacement, D.nameReplaceExisting, D.nameDoNotQueue] xmonad $ addDescrKeys' ((mod4Mask, xK_F1), showKeybindings) myKeys $ docks . ewmh $ def { manageHook = myManageHook \u003c+\u003e manageDocks , handleEventHook = windowedFullscreenFixEventHook \u003c\u003e swallowEventHook (className =? \"Alacritty\" \u003c||\u003e className =? \"st-256color\" \u003c||\u003e className =? \"XTerm\") (return True) \u003c\u003e trayerPaddingXmobarEventHook , modMask = myModMask , terminal = myTerminal , startupHook = myStartupHook , layoutHook = myLayoutHook , workspaces = myWorkspaces , borderWidth = myBorderWidth , normalBorderColor = myNormColor , focusedBorderColor = myFocusColor , logHook = dynamicLogWithPP (myLogHook dbus) } "},"title":"Hacking on XMonad + Polybar"},"/blog/latex-homework-template/":{"data":{"":" How to create Homework LaTeX Template? Creating a LaTeX Homework Template (after not using it for a while)"},"title":"LaTeX Homework Template"},"/blog/menulis-latex/":{"data":{"":" Menulis LaTeX Pernahkah kalian membaca dokumen, artikel ilmiah, atau buku teks fisika dengan banyak persamaan/rumus seperti gambar di bawah?\ndummy pict\nDokumen pada Gambar 1, 2, dan 3 ditulis menggunakan LaTeX. Secara sederhana, LaTeX sama saja dengan software penulisan dokumen lainnya, seperti Ms. Word. Perbedanannya, untuk melakukan pemformatan pada dokumen, kita menggunakan sebuah perintah/command, bukan menggunakan tombol GUI (graphical user interface).\nJika alsannya adalah untuk menuliskan persamaan, mengapa tidak menggunakan Ms. Word saja? Memang kita dapat menggunakan equation tools di dalam Ms. Word untuk menulis dokumen yang berisi persamaan fisika/matematika. Namun, jika persamaan-persamaan tersbut mulai kompleks, akan jauh lebih mudah dan tertata jika dituliskan menggunakan LaTeX. Disamping itu, terdapat banyak kelebihan menggunakan LaTeX dibandingkan software office biasa1.\nMenulis menggunakan LaTeX pada awalnya akan terasa sulit. Sebelumnya, kita terbiasa menulis dengan gaya \"WYSIWYG\" What You See is What You Get dengan Ms. Office atau Google Suite. Sedangkan LaTeX lebih condong pada \"WYGIWYM\" What You Get is What You Mean. Pada LaTeX, kita menuliskan perintah/command semantik LaTeX dan melihat output dokumen yang dihasilkan setelah melakukan proses compile.\nUntuk bacaan lebih lanjut, kalian dapat mengunjungi artikel Learn LaTeX in 30 minutes. Tutorial ini juga dibuat mengacu pada artikel tersebut.\nTLDR.\nKalian dapat membaca artikel ini secara linier berurutan atau langsung melihat contoh dan mempelajarinya sendiri dengan mengeditnya.\nPersiapan Untuk menulis LaTeX, pada dasarnya kalian memerlukan code/text-editor \u0026 terminal. Code/text-editor digunakan untuk mengedit kode LaTeX, sedangkan terminal digunakan untuk menjalankan perintah compile melalui shell yang ada.\nCode/text editor yang dapat kalian gunakan sangat bervariasi. Kalian dapat menggunakan text editor seperti: notepad; code editor seperti: Visual Studio Code, emacs, dan VIM/Neovim; maupun IDE LaTeX seperti TeXstudio, TeXmaker, dan TeXifier.\nNamun, untuk pengenalan kali ini kita akan menggunakan Overleaf. Overleaf adalah editor LaTeX berbasis web. Dengan menggunakan Overleaf kita tidak perlu melakukan installasi dan setup LaTeX di komputer kita. Kelemahannya, kalian harus online untuk dapat menggunakan Overleaf.\n\u003cfigure\u003e \u003cimg loading=\"lazy\" className=\"w-full\" src=\"/images/learn-latex-article-g.gif\"/\u003e \u003cfigcaption\u003ePenulisan LaTeX menggunakan \u003ca href=\"https://www.overleaf.com/project\" rel=\"noreferrer\"\u003eOverleaf\u003c/a\u003e\u003c/figcaption\u003e \u003c/figure\u003e\nJika kalian ingin menulis LaTeX secara offline, kalian dapat melihat berbagai video totorial di YouTube. Berikut beberapa contohnya:\nUntuk sistem operasi Windows: klik di sini Untuk sistem operasi MacOS: klik di sini Untuk sistem operasi Linux: klik di sini Catatan: Untuk linux, sesuaikan perintah install TeXLive dengan package manager distro linux masing-masing. Dalam video tersbut saya menggunakan Endeavour OS (Arch linux based).\nPrasyarat: Dasar Overleaf Kalian harus membuat akun Overleaf dengan klik Sign up di sudut kanan atas. Klik New Project (di sisi kiri) untuk membuat proyek baru (untuk saat ini, pilih Blank Project. Tentu kalian bebas mencoba pilihan lainnya.). ![new project](/images/learn-latex-article-6.png)\nSetelah itu, kalian akan masuk ke dalam halaman berikut. ![new project](/images/learn-latex-article-7.png)\nDi sebelah kiri, terdadpat file-tree projek kalian. Secara default kita diberikan file main.tex yang merupakan file latex kita.\nSetiap file dalam komputer memiliki ekstensi file (bagian yang terletak setelah nama file, misal namaFile.extensi). Sebagai contoh, file gambar dapat memiliki ekstensi (.jpg, .png, .webp, dsb.). File bahasa pemrograman python dengan ekstensi .py, bahasa c++ dengan ekstensi .cpp, begitupun LaTeX/TeX dengan ekstensi .tex.\nMemulai Menulis LaTeX Setiap dokumen LaTeX memiliki struktur dasar sebagai berikut:\n\\documentclass{article} % Kelas dokumen \\usepackage{graphicx} % mengimport package \"graphicx\" \\title{Judul Dokumen} \\author{Nama Penulis} \\date{\\today} % Tanggal otomatis \\begin{document} \\maketitle % Mengkonversi \\title{...} \\author{...} \\date{...} ke dalam teks judul Isi dokumen kita. Laba penjualan yang diperoleh sebesar 3\\%. \\end{document} Stuktur dokumen diatas jika kita compile di dalam overleaf akan menghasilkan output berikut.\n\u003cfigure\u003e \u003cimg loading=\"lazy\" className=\"w-full\" src=\"/images/learn-latex-article-4.png\"/\u003e \u003c/figure\u003e\nMari kita bahas elemen-elemen utama dalam struktur dasar di atas.\n\\documentclass{article}: Menentukan jenis dokumen, dalam hal ini adalah artikel. Selain artikel terdapat beberapa kelas lain seperti report, book, beamer, dan bahkan kelas dokumen custom yang dapat dibuat sendiri. \\usepackage{graphicx}: Mengimport package \"graphicx\". Terdapat banyak package yang dapat digunakan di dalam LaTeX. Dalam contoh ini, graphicx diperlukan jika kita ingin menyisipkan gambar di dalam dokumen kita. \\title{}: Mendefinisikan judul dokumen. \\author{}: Mendefinisikan nama penulis. \\date{}: Mendefinisikan tanggal. ‚Üíday menghasilkan tanggal hari ini secara otomatis. \\begin{document} dan \\end{document}: Menkaliani awal dan akhir dokumen. \\maketitle: Membuat judul dokumen berdasarkan \\title{...} \\author{...} \\date{...}. \\section{}: Membuat section/bagian dalam dokumen mirip seperti heading pada Ms. Word. Seluruh area sebelum perintah \\begin{document} disebut area preamble. baris yang diawali tkalian % tidak akan dieksekusi/dicompile. Simbol % digunakan untuk menandakan baris comment seperti bahasa-bahasa pemrograman lain. Bagaimana jika ingin menuliskan tanda % di dalam sebuah kalimat? kita harus menambahak escape character: \\ sebelum tanda %. Secara lebih detail kalian dapat membaca artikel berikut.\nText Bold, Italic, dan Underline Teks dengan format:\nBold: dihasilkan dengan memasukkan teks ke dalam perintah `\\textbf{teks ini dicetak tebal}`. Italic: dihasilkan dengan memasukkan teks ke dalam perintah `\\textit{teks ini dicetak miring}`. \u003cu\u003eUnderline\u003c/u\u003e: dihasilkan dengan memasukkan teks ke dalam perintah `_line{teks ini memiliki underline}`. \u003cem\u003eEmphasized\u003c/em\u003e (membuat teks menjadi italic jika dalam teks biasa, atau tegak jika berada dalam perintah `\\textit{‚Ä¶}`): dihasilkan dengan perintah `\\emph{contoh teks dengan penekanan (emphasized)}`. Perhatikan contoh berikut.\n```latex showLineNumbers \\documentclass{article}\n\\begin{document} Lorem \\textbf{teks bercetak bold} dolor sit amet, \\underline{teks dengan underline} elit, sed do eiusmod tempor \\textit{teks bercetak italic} ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud \\emph{teks emphasized} ullamco laboris nisi ut aliquip ex ea commodo consequat. \\textit{Ut enim ad minim veniam, \\emph{teks emphasized di dalam italic} ullamco laboris nisi ut aliquip consequat.} \\end{document} ``` \u003cCallout\u003e output: ![contoh format teks](/images/learn-latex-article-5.png) \u003c/Callout\u003e\nMenambahkan Gambar Untuk menambahkan gambar, kita memerlukan package `graphicx` yang menyediakan perintah import gambar. Jika kita memiliki struktur projek sebegai berikut pada file-tree.\n```sh . ‚îú‚îÄ‚îÄ gambar ‚îÇ¬†‚îî‚îÄ‚îÄ contoh-gambar.png ‚îî‚îÄ‚îÄ main.tex ``` \u003cCallout\u003e Note: `contoh-gambar.png` terletak di dalam folder `gambar`. \u003c/Callout\u003e\nMaka gambar dapat di-import menggunakan perintah `‚ààcludegraphics{gambar/contoh-gambar.png}`. Berikut contoh lengkap menambahkan gambar.\n```latex showLineNumbers \\documentclass{article} \\usepackage{graphicx}\n\\begin{document} \\begin{figure}[h] % argument `[h]` akan saya bahas pada blog terpisah \\centering \\includegraphics[width=0.75\\textwidth]{gambar/contoh-gambar.png} \\caption{Mengimport gambar} \\label{fig:contoh-gambar} \\end{figure} Gambar \\ref{fig:contoh-gambar} menunjukkan kapasitor pelat sejajar dengan dua material dielektrik linier berbeda. \\end{document} ``` \u003cCallout\u003e Output: ![contoh menambahkan gambar](/images/learn-latex-article-8.png) \u003c/Callout\u003e\nPembahasan Environment Figure Setiap perintah yang dimulai dengan `\\begin{‚Ä¶} ‚Ä¶ \\end{‚Ä¶}` disebut environment. Secara sederhana environment adalah pengelompokan perintah dengan fungsi yang saling berikaitan. Sebagai contoh, perintah `\\begin{figure}` dan `\\end{figure}` adalah environment gambar. Di mana pada environment gambar dapat berisi:\n`¬¢ering:` meletakkan gambar/teks di tengah secara horizontal (center). `‚ààcludegraphics[width=0.5\\textwidth]{path/to/image.jpg}:` Menyisipkan gambar dan mengatur lebarnya menjadi 50% dari lebar area teks. Ganti `path/to/image.jpg` dengan path (alamat/letak) file gambar kalian, dalam contoh di atas pada `gambar/contoh-gambar.png`. `‚à©tion{Mengimport gambar}:` Menambahkan caption di bawah gambar. `\\label{fig:contoh-gambar}:` Memberikan label pada gambar untuk referensi di tempat lain dalam dokumen. `\\label{‚Ä¶}` tidak hanya digunakan di dalam environment gambar, tetapi juga environments lain untuk kemudian dikutip di bagian lain menggunakan perintah `\\ref{‚Ä¶}`.\nOpsi Merubah Ukuran Gambar Kalian dapat mengatur ukuran gambar menggunakan beberapa cara:\nwidth: untuk mengatur lebar. ```latex showLineNumbers % Mengatur ukuran gambar relatif terhadap lebar area teks ‚ààcludegraphics[width=0.75\\textwidth]{path/to/image.jpg}\n% atau dengan ukuran absolut ‚ààcludegraphics[width=10cm]{path/to/image.jpg} ```\nheight: untuk mengatur tinggi. ```latex showLineNumbers % Mengatur ukuran gambar relatif terhadap lebar area teks ‚ààcludegraphics[height=0.75\\textwidth]{path/to/image.jpg}\n% atau dengan ukuran absolut ‚ààcludegraphics[height=10cm]{path/to/image.jpg} ```\nKalian dapt menggunakan key height dan width bersamaan,\n```latex showLineNumbers ‚ààcludegraphics[height=5cm, width=10cm]{path/to/image.jpg} ``` dengan konsekuensi jika rasio ukuran yang kalian berikan tidak sama dengan rasio gambar, maka gambar akan strech_/tertarik/_gepeng.\nscale: menskalakan gambar berdasarkan faktor pengali. ```latex showLineNumbers % ukuran gambar 0.5 (setengah) ukuran aslinya ‚ààcludegraphics[scale=0.5]{path/to/image.jpg}\n% ukuran gambar 1.5 (satu-setengah) ukuran aslinya ‚ààcludegraphics[scale=1.5]{path/to/image.jpg} ```\nPosisi Gambar Argument pemosisian dalam environment gambar dapat berupa `[h], [t], [b], [p]`:\n`[h]` (here atau di sini): menembpatkan gambar kira-kira di sini!. `[t]` (top atau atas): menempatkan gambar di bagian atas halaman. `[b]` (bottom atau bawah): menempatkan gambar di bagian bawah halaman. `[p]` (page atau halaman): menempatkan gambar pada halaman tersendiri/khusus. atau kombinasi beberapa/semua dari keempatnya.\nBullet/List di dalam LaTeX Unordered list Unordered list menggunakan poin-poin bullet untuk menkaliani setiap item. Untuk membuat unordered list, gunakan environment itemize.\n```latex showLineNumbers\n\\begin{itemize} \\item Unordered item pertama \\item Unordered item kedua \\item Unordered item ketiga \\end{itemize} ```\nOrdered list Ordered list menggunakan nomor/alphabet untuk menkaliani setiap item. Untuk membuat ordered list, gunakan environment enumerate.\n```latex showLineNumbers\n\\begin{enumerate} \\item Ordered item pertama \\item Ordered item kedua \\item Ordered item ketiga \\end{enumerate} ```\nKombinasi Ordered dan Unordered list ```latex showLineNumbers\n\\begin{enumerate} \\item Item pertama \\begin{itemize} \\item Subitem satu \\item Subitem dua \\end{itemize} \\item Item kedua \\end{enumerate} ```\n\u003cCallout\u003e Output: ![list](/images/learn-latex-article-9.png) \u003c/Callout\u003e\n\u003e Untuk pemformatan list lebih lanjut seperti cara mengubah icon bullet, gaya penomoran (misalnya menggunakan angka romawi), maupun indentasi, kalian dapat membaca artikel berikut: \u003ca href=\"https://www.overleaf.com/learn/latex/Lists\" target=\"_blank\" rel=\"noreferrer\"\u003eoverleaf.com/learn/latex/Lists\u003c/a\u003e.\nMenambahkan Persamaan Matematika dalam Dokumen LaTeX Salah satu keunggulan utama LaTeX adalah kemampuannya untuk menangani notasi matematika dengan sangat baik. Kalian dapat menulis persamaan matematika baik dalam bentuk inline (di dalam teks) maupun dalam bentuk display (terpisah dari teks atau pada baris khusus).\nPersamaan Matematika Inline Persamaan matematika inline ditulis di dalam tkalian `$...$` atau `\\(...\\)`. Kode berikut\n```latex showLineNumbers \\documentclass{article}\n\\begin{document} Rumus Pythagoras adalah \\(a^2 + b^2 = c^2\\). Persamaan $E=mc^2$ menyatakan hubungan massa dan energi. \\end{document} ``` \u003cCallout\u003e menghasilkan output\n![inline math](/images/learn-latex-article-10.png) \u003c/Callout\u003e\nPersamaan Matematika Display Ekspresi matematika display ditulis di luar teks biasa, seringkali digunakan untuk menampilkan persamaan yang kompleks atau ingin diberi penomoran. Gunakan environment equation untuk menampilkan persamaan matematika dalam gaya displayed.\n```latex {5,6,7,8,11,12,13} showLineNumbers \\documentclass{article} \\usepackage{amsmath}\n\\begin{document} Hubungan Energi relativistik dinyatakan oleh Persamaan (\\ref{persamaan-1}). \\begin{equation} E^2=(pc)^2+(m_0 c^2)^2. \\label{persamaan-1} \\end{equation} Hukum Faraday dalam bentuk differensial dinytakan oleh \\begin{equation*} \\vec{\\nabla} \\times \\vec{E} = -\\frac{\\partial \\vec{B}}{\\partial t} \\end{equation*} \\end{document} ```\n\u003cCallout\u003e Output:\n![displayed math](/images/learn-latex-article-11.png) \u003c/Callout\u003e\nPerhatikan perbedaan environmen equation vs equation*. equation* tidak memberikan penomoran persamaan. Environment equatin* ini disediakan oleh package `amsmath`.\n\u003cCallout\u003e\nSecara sederhana, untuk menuliskan huruf yunani atau simbol matematika, kita menuliskan `\\namaSymbolAtauHuruf` (selalu di awali tkalian backslash \"\\\\\"). Sebagai contoh: $\\alpha, \\beta,$ dan $\\gamma$ dapat diperoleh dengan menuliskan `Œ±, Œ≤,` dan `Œ≥`. Untuk menulis fungsi matematika seperti trigonometri atau logaritma, gunakan perintah bawaan seperti `sin`, `cos`, `log`, dan sebagainya. Jangan menuliskannya tanpa \"\\\\\". Berikut perbedaan hasil fungsi `sin` yang ditulis dengan dan tanpa tkalian \"\\\\\".\ndengen \"\\\\\" (terbaca sebagai suatu fungsi $\\sin(\\dots)$) $$ \\sin(x) $$ tanpa \"\\\\\" (dianggap sebagai variabel $s$, $i$, dan $n$, sehingga ditulis miring) $$ sin(x) $$ \u003c/Callout\u003e\nUntuk notasi matematika yang lebih kompleks, kita disarankan untuk menggunakan paket `amsmath`.\nPackage `amsmath` Environment align dan aligned Environment align digunakan untuk menyusun beberapa persamaan dengan tkalian `=` yang sejajar, atau mensejajarkan pada titik-titik tertentu.\n```latex showLineNumbers \u0026 {6,13} \\documentclass{article} \\usepackage{amsmath}\n\\begin{document} \\section*{Environment align} \\begin{align} \\vec{E} \u0026= \\frac{1}{\\epsilon_0(1+\\chi_e)}\\vec{D}\\\\ = \\frac{1}{\\epsilon_0} \u0026 \\frac{1}{4\\pi r^2}Q\\\\ \u0026= \\frac{1}{\\epsilon_0} \\frac{1}{4\\pi r^2}Q\\\\ \u0026= \\frac{Q}{4\\pi \\epsilon_0 r^2} \\end{align} \\section*{Environment align*} \\begin{align*} \\vec{E} \u0026= \\frac{1}{\\epsilon_0(1+\\chi_e)}\\vec{D}\\\\ = \\frac{1}{\\epsilon_0} \u0026 \\frac{1}{4\\pi r^2}Q\\\\ \u0026 = \\frac{1}{\\epsilon_0} \\frac{1}{4\\pi r^2}Q\\\\ \u0026= \\frac{Q}{4\\pi \\epsilon_0 r^2} \\end{align*} \\section*{Environment aligned di dalam equation} \\begin{equation} \\begin{aligned} \\vec{E} \u0026= \\frac{1}{\\epsilon_0(1+\\chi_e)}\\vec{D}\\\\ = \\frac{1}{\\epsilon_0} \u0026 \\frac{1}{4\\pi r^2}Q\\\\ \u0026 = \\frac{1}{\\epsilon_0} \\frac{1}{4\\pi r^2}Q\\\\ \u0026= \\frac{Q}{4\\pi \\epsilon_0 r^2} \\end{aligned} \\end{equation} \\end{document} ```\n\u003cCallout\u003e Output:\n\u003cobject data=\"/documents/learn-latex-article-12.pdf\" type=\"application/pdf\" width=\"100%\" height=\"460\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen \u003e \u003cp\u003eUnable to display PDF file. \u003ca target=\"_blank\" href=\"/documents/learn-latex-article-12.pdf\"\u003eDownload\u003c/a\u003e instead.\u003c/p\u003e \u003c/object\u003e \u003c/Callout\u003e\nPerhatikan bahwa kita menkaliani titik-titik yang ingin disejajarkan dalam persamaan menggunakan simbol ampersand (`\u0026`). Untuk menggunaakn tkalian ampersand (\u0026) di dalam teks biasa, sama seperti tanda %, kalian harus menambahkan tanda `\\` di awal (escape character). Perhatikan perbedaan sistem penomoran dari ketiga contoh di atas. \u003e Untuk penulisan ekspresi matematika yang lebih lengkap dapat kalian baca dalam artikel \u003ca rel=\"noreferrer\" href=\"https://www.overleaf.com/learn/latex/Mathematics\" target=\"_blank\"\u003eoverleaf.com/learn/latex/Mathematics\u003c/a\u003e\nMembuat Tabel Untuk membuat tabel sederhana di LaTeX, gunakan environment table untuk menampung tabel dan environment tabular untuk menyimpan isi tabel.\n```latex showLineNumbers \\documentclass{article} \\usepackage{amsmath}\n\\begin{document} \\begin{table}[h] \\centering \\begin{tabular}{|l|c|r|} \\hline Header 1 \u0026 Header 2 \u0026 Header 3 \\\\ \\hline Data 1 \u0026 Data 2 \u0026 Data 3 \\\\ Data 4 \u0026 Data 5 \u0026 Data 6 \\\\ \\hline \\end{tabular} \\caption{Contoh Tabel} \\label{tab:contoh} \\end{table} \\end{document} ``` \u003cCallout\u003e Output:\n\u003cimg src=\"/images/learn-latex-article-14.png\" loading=\"lazy\"/\u003e\n\u003c/Callout\u003e\n`\\begin{table}[h]` dan `\\end{table}`: environment untuk tabel yang menyediakan floating environment, sehingga LaTeX dapat memposisikan tabel sesuai dengan layout dokumen. Opsi/argumen [h] menunjukkan bahwa tabel sebaiknya diletakkan \"here\" (di sini). `¬¢ering`: meletakkan tabel di tengah halaman secara horizontal. `\\begin{tabular}{|c|c|c|}` dan `\\end{tabular}`: environment untuk membuat isi tabel. `{|l|c|r|}` menentukan bahwa tabel memiliki tiga kolom yang disusun secara vertikal (dengan garis pembatas di antaranya). Kolom pertama rata kiri (l, left), kolom ke-dua rata tengah (c, center), dan kolom ke-tiga rata kanan (r, right). Coba contoh berikut:\n`{c|c|c}` `{ll|c}` `\\hline`: Menambahkan border/garis horizontal. `\u0026`: Memisahkan kolom. `\\\\`: Menkaliankan akhir baris/membuat baris baru. `‚à©tion{Contoh Tabel}`: Menambahkan keterangan atau judul tabel. Menggabungkan kolom dan/atau baris (merge column and row) Sebagai section terakhir, saya akan berikan ini sebagai latihan bagi kalian untuk memhamai secara mandiri. ```latex showLineNumbers \\documentclass{article} \\usepackage{multirow}\n\\begin{document} \\section{Pendahuluan} Dokumen ini menunjukkan cara membuat dan menyesuaikan tabel dalam LaTeX. \\section{Tabel Dasar} Berikut adalah tabel dasar: \\begin{table}[h] \\centering \\begin{tabular}{|c|c|c|} \\hline Header 1 \u0026 Header 2 \u0026 Header 3 \\\\ \\hline Data 1 \u0026 Data 2 \u0026 Data 3 \\\\ Data 4 \u0026 Data 5 \u0026 Data 6 \\\\ \\hline \\end{tabular} \\caption{Contoh Tabel} \\label{tab:contoh} \\end{table} \\section{Lebar Kolom yang Disesuaikan} Berikut adalah tabel dengan lebar kolom yang disesuaikan: \\begin{table}[h] \\centering \\begin{tabular}{|p{3cm}|p{5cm}|p{4cm}|} \\hline Header 1 \u0026 Header 2 \u0026 Header 3 \\\\ \\hline Data 1 \u0026 Data 2 \u0026 Data 3 \\\\ Data 4 \u0026 Data 5 \u0026 Data 6 \\\\ \\hline \\end{tabular} \\caption{Tabel dengan Lebar Kolom yang Disesuaikan} \\label{tab:lebar_kolom} \\end{table} \\section{Menggabungkan Baris dan Kolom} Berikut adalah tabel dengan baris dan kolom yang digabungkan: \\begin{table}[h] \\centering \\begin{tabular}{|c|c|c|} \\hline \\multicolumn{2}{|c|}{Gabungan Kolom} \u0026 Kolom 3 \\\\ \\hline \\multirow{2}{*}{Baris 1 dan 2} \u0026 Data 2 \u0026 Data 3 \\\\ \u0026 Data 5 \u0026 Data 6 \\\\ \\hline Data 7 \u0026 Data 8 \u0026 Data 9 \\\\ \\hline \\end{tabular} \\caption{Tabel dengan Baris dan Kolom yang Digabungkan} \\label{tab:gabungan} \\end{table} \\end{document} ```\n\u003cCallout\u003e Output:\n\u003cobject data=\"/documents/learn-latex-article-15.pdf\" type=\"application/pdf\" width=\"100%\" height=\"460\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen \u003e \u003cp\u003eUnable to display PDF file. \u003ca target=\"_blank\" href=\"/documents/learn-latex-article-15.pdf\"\u003eDownload\u003c/a\u003e instead.\u003c/p\u003e \u003c/object\u003e \u003c/Callout\u003e\n\u003cCallout\u003e\nPenutup Dalam menulis LaTeX kalian tidak perlu menghafal secara detail semua perintah dan packages yang dibutuhkan:\n\u003cdiv className=\"text-center\"\u003e You google what you need, and then forget about it, until the next time you need it, at which point you google it again \u003c/div\u003e\nReferensi tutorial Totorial LaTeX lengkap dapat kalian di dalam \u003ca href=\"https://www.overleaf.com/learn\" target=\"_blank\" rel=\"noreferrer\"\u003edokumentasi LaTeX oleh Overleaf\u003c/a\u003e, atau dengan melihat playlist youtube \u003ca href=\"https://youtube.com/playlist?list=PLHXZ9OQGMqxcWWkx2DMnQmj5os2X5ZR73\u0026si=WhEAnfmAUYOhoBXK\" target=\"blank\" rel=\"noreferrer\"\u003e_LaTeX tutorials berikut\u003c/a\u003e. \u003c/Callout\u003e\nReferensi 1: Baca artikel The secret to better scientific and technical writing"},"title":"Menulis Latex"},"/blog/patching-simple-terminal-st/":{"data":{"":" How to create Homework LaTeX Template? "},"title":"Patching Simple Terminal (st)"},"/blog/plotting-fresnel-equation-python/":{"data":{"":"","final-result#Final Result":" ","provided-code#Provided code":"[[https://github.com/firman-qs/fresnel-equation-plot-python]]","simple-equation-derivation#Simple Equation Derivation":"We start with Fresnel Equations\n\\begin{equation} \\tilde{E}{0_R} = \\left(\\frac{\\alpha-\\beta}{\\alpha+\\beta}\\right)\\tilde{E}{0_I}, ~~~~~~ \\tilde{E}{0_T} = \\left(\\frac{2}{\\alpha + \\beta}\\right) \\tilde{E}{0_I}. \\tag{1} \\end{equation}\nwhere\n\\begin{equation} \\alpha\\equiv \\frac{\\cos\\theta_T}{\\cos\\theta_I}, \\tag{2} \\end{equation}\nand\n\\begin{equation} \\beta \\equiv \\frac{\\mu_1 v_1}{\\mu_2 v_2} = \\frac{\\mu_1 n_2}{\\mu_2 n_1}. \\tag{3} \\end{equation}\nIf we assume the special case where (\\mu_1 \\cong \\mu_2 \\cong \\mu_0) then\n\\begin{equation} \\beta \\cong \\frac{n_2}{n_1}. \\tag{4} \\end{equation}\nBased on Snell‚Äôs law we know that\n\\begin{equation} \\sin\\theta_T = \\frac{n_1}{n_2} \\sin\\theta_I. \\tag{5} \\end{equation}\nUsing identity (\\cos^2\\theta_T+\\sin^2\\theta_T = 1) then the previous ( \\alpha ) equation (2) becomes\n\\begin{equation} \\alpha = \\frac{\\sqrt{1-\\sin^2\\theta_T}}{\\cos\\theta_I} = \\frac{\\sqrt{1-\\left[(n_1/n_2)\\sin\\theta_I\\right]^2}}{\\cos\\theta_I}. \\end{equation}\nFor reflectance and transmittance\n\\begin{equation} \\newcommand{\\rbrak}[1]{\\left(#1 \\right)} T\\equiv\\frac{I_T}{I_I}=\\underbrace{\\frac{\\epsilon_2v_2}{\\epsilon_1v_1}}\\beta\\underbrace{\\rbrak{\\frac{E{0_T}}{E_{0_I}}}}\\text{Eq. 1}\\underbrace{\\frac{\\cos\\theta_T}{\\cos\\theta_I}}\\alpha=\\alpha\\beta\\rbrak{\\frac{2}{\\alpha+\\beta}}^2. \\end{equation}","video-on-plotting-fresnel-equations#Video on Plotting Fresnel Equations":" "},"title":"Plotting Fresnel Equations with Python"},"/docs/":{"data":{"":" Fisika Kelas 10 Fisika Kelas 11 "},"title":"Kumpulan Materi Fisika"},"/docs/babats7/":{"data":{"":"","#":"Belajar Bareng Tim Soal Fisika #7 (Materi Elektromagnetika) Info\nPowerpoint Materi dapat di download pada tautan ini PDF Pembahasan Soal-Soal UAS Elektroamgnetika dapat di download pada tautan ini\nVideo rekaman materi babats dapat dilihat pada tautan ini "},"title":"BaBaTS-7: EM"},"/docs/fisikax/":{"data":{"":" Pengukuran Pemanasan Global "},"title":"Fisika Kelas 10"},"/docs/fisikax/pengukuran/":{"data":{"":" üìñ Buku Pengukuran Besaran, Satuan, dan Dimensi Jangka Sorong Mikrometer Sekrup üéØ Tugas Bab Pengukuran dalam Kegiatan Kerja Ilmiah "},"title":"Pengukuran"},"/docs/fisikax/pengukuran/2-0/":{"data":{"":"","buku-pengukuran-dalam-kegiatan-kerja-ilmiah#Buku Pengukuran dalam Kegiatan Kerja Ilmiah":""},"title":"üìñ Buku Pengukuran"},"/docs/fisikax/pengukuran/2-1/":{"data":{"":"","besaran-satuan-dan-dimensi#Besaran, Satuan, dan Dimensi":""},"title":"Besaran, Satuan, dan Dimensi"},"/docs/fisikax/pengukuran/2-2a/":{"data":{"":" Tekan Tombol ‚õ∂ Untuk Memperbesar Layar Simulasi | Tekan Esc pada keyboard untuk keluar dari mode layaer penuh. Sumber: SimPhy\nYour browser doesn't support iframes "},"title":"Jangka Sorong"},"/docs/fisikax/pengukuran/2-2b/":{"data":{"":" Tekan Tombol ‚õ∂ Untuk Memperbesar Layar Simulasi | Tekan Esc pada keyboard untuk keluar dari mode layaer penuh. Sumber: https://maheshkurmi.github.io/experiments/micrometer.html\nYour browser doesn't support iframes "},"title":"Mikrometer Sekrup"},"/docs/fisikax/pengukuran/tugas/":{"data":{"":"","tugas-1-tugas-besaran-pokok-dan-turunan-yang-dikerjakan-di-kelas#Tugas 1: Tugas Besaran Pokok dan Turunan yang dikerjakan di Kelas.":" Info\nTugas dikumpulkan pada tautan berikut paling lambat Jum‚Äôat, 4 Oktober 2024.","tugas-2-dimensi#Tugas 2: Dimensi.":" Info\nTugas dikumpulkan pada tautan berikut paling lambat Senin, 7 Oktober 2024.","tugas-3-jangka-sorong-dan-mikrometer-sekrup#Tugas 3: Jangka Sorong dan Mikrometer Sekrup.":" Info\nTugas dikumpulkan pada tautan berikut paling lambat Jum‚Äôat, 11 Oktober 2024."},"title":"üéØ Tugas Bab Pengukuran dalam Kegiatan Kerja Ilmiah"},"/docs/fisikaxi/":{"data":{"":" Elastisitas Titik Berat "},"title":"Fisika Kelas 11"},"/docs/fisikaxi/elastisitas/":{"data":{"":"","pembahasan-uh-elastisitas#Pembahasan UH Elastisitas":" File pembahasan soal eastisitas dapat diunduh disini."},"title":"Elastisitas"},"/docs/fisikaxi/titik-berat/":{"data":{"":" Titik Berat Sistem Benda Titik atau Partikel Titik Berat Sistem Benda 1 Dimensi Titik Berat Sistem Benda 2 Dimensi Titik Berat Sistem Benda 3 Dimensi Rangkuman dan Asal-usul Rumus-Rumus Titik Berat (belum lengkap) Tugas Titik Berat "},"title":"Titik Berat Benda"},"/docs/fisikaxi/titik-berat/titik-berat-sistem-1d/":{"data":{"":"","penjelasan-materi-titik-berat-sistem-benda-homogen-1-dimensi#Penjelasan Materi Titik Berat Sistem Benda Homogen 1 Dimensi":" "},"title":"Titik Berat Benda Homogen 1 Dimensi"},"/docs/fisikaxi/titik-berat/titik-berat-sistem-2d/":{"data":{"":"","penjelasan-materi-titik-berat-sistem-benda-homogen-2-dimensi#Penjelasan Materi Titik Berat Sistem Benda Homogen 2 Dimensi":" "},"title":"Titik Berat Benda Homogen 2 Dimensi"},"/docs/fisikaxi/titik-berat/titik-berat-sistem-3d/":{"data":{"":"","penjelasan-materi-titik-berat-sistem-benda-homogen-3-dimensi#Penjelasan Materi Titik Berat Sistem Benda Homogen 3 Dimensi":" "},"title":"Titik Berat Benda Homogen 3 Dimensi"},"/docs/fisikaxi/titik-berat/titik-berat-sistem-titik/":{"data":{"":"","penjelasan-materi-titik-berat-sistem-benda-titikpartikel#Penjelasan Materi Titik Berat Sistem Benda Titik/Partikel":" "},"title":"Titik Berat Benda Titik/Partikel"},"/docs/fisikaxi/titik-berat/titik-berat-x-penurunan-rumus/":{"data":{"":" Note\nLatihan Soal di dalam video adalah gambaran soal yang diujikan dalam Ulangan Harian 27-sep-2024.","pdf-rangkuman-dan-asal-usul-rumus-rumus-titik-berat-belum-lengkap#PDF Rangkuman dan Asal-usul Rumus-Rumus Titik Berat (belum lengkap)":" Jika pdf tidak dapat diakses, silahkan download menggunakan tautan berikut.\nPenurunan rumus (tidak jadi saya tuliskan) tidak akan masuk di ujian. Hanya sebagai pengetahuan. File di bawah berisi rangkuman materi titik berat yang bisa dibaca.","video#Video":" "},"title":"‚≠ê Rangkuman dan Latihan 22 Soal Titik Berat"},"/docs/fisikaxi/titik-berat/tugas-titik-berat/":{"data":{"":"","latihan-soal-titik-berat-benda-_#Latihan Soal Titik Berat Benda ^_^":" Info\nVideo rangkuman dan 22 pembahasan contoh soal titik berat (preview UH) dapat diakses disini Latihan Soal Titik Berat Benda dapat diunggah disini. Batas Pengumpulan adalah pada hari Rabu, 25 September 2024, Pukul 23.59. Diperbolehkan berdikusi dengan teman yang lain. Jangan sungkan untuk bertanya kepada saya melalui chat-pribadi jika mengalami kesulitan dalam mengerjakan soal kapanpun.\nJika pdf tidak dapat diakses, silahkan download menggunakan tautan berikut."},"title":"üéØ Tugas Titik Berat"},"/docs/pfisum6110optics/":{"data":{"":" Gelombang EM di Ruang Vakum Gelombang EM di Material dan Hukum Dasar Optika "},"title":"PFIS6110-Optika"},"/docs/pfisum6110optics/em-di-material-dan-hukum-dasar-optika/":{"data":{"":"","pertemuan-2#Pertemuan 2":" Materi oleh Firman Qashdus Sabil"},"title":"Pertemuan 2: Gelombang EM di Material dan Hukum Dasar Optika"},"/docs/pfisum6110optics/gelombang-em-vakum/":{"data":{"":"","pertemuan-1#Pertemuan 1":" Materi oleh Alpan Ibrahim"},"title":"Pertemuan 1: Gelombang EM di ruang Vakum dan Kecepatan Cahaya"}}